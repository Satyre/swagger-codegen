/**
* Atlas API Reference
*
* OpenAPI spec version: dev
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package fr.vestiairecollective.network.redesign.api

import fr.vestiairecollective.network.redesign.model.*
import io.reactivex.Single
import retrofit2.http.*

interface NegotiationsService {

    /**
    * Add an event to a negotiation
    * Add an event to a negotiation (accept, reject or add offer)
    * @param id Id of the negotiation 
    * @param payload  (optional)
    * @return Single<NegotiationResponse>
    */
	@POST("negotiations/{id}/events")
    fun addNegotiationEvent(@Path("id") id: String, @Body payload: NegotiationEventRequest? = null): Single<NegotiationResponse>
    /**
    * Returns a single negotiation
    * 
    * @param id ID of the negotiation to fetch 
    * @param withEvents List all the events of the negotiation (optional, default to false)
    * @return Single<NegotiationResponse>
    */
	@GET("negotiations/{id}")
    fun getNegotiation(@Path("id") id: String, @Query("withEvents") withEvents: String? = null): Single<NegotiationResponse>
    /**
    * Get a list of negotiations
    * Returns a list of negotiations for currently signed-in user.
    * @param role Filter by user role. Returns both buyer and seller initiated negotiations by default.  (optional, default to both)
    * @param withEvents If true, returns events (optional, default to false)
    * @param activityStatus active (default): returns only active negotiations (max 1 per product+buyer) activeAndRecentlyClosed: returns closed negotiations as well, but only if closed recently (less than 7 days ago) all: all activity status (active and closed, regardless of when it happened)  (optional, default to active)
    * @param limit This is the maximum number of objects that may be returned. (optional, default to 10)
    * @param offset This offsets the start of each page by the number specified. (optional, default to 0)
    * @return Single<NegotiationListResponse>
    */
	@GET("negotiations")
    fun listNegotiations(@Query("role") role: String? = null, @Query("withEvents") withEvents: Boolean? = null, @Query("activityStatus") activityStatus: String? = null, @Query("limit") limit: Int? = null, @Query("offset") offset: Int? = null): Single<NegotiationListResponse>
}
