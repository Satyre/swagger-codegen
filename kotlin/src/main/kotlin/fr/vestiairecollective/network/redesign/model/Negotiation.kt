/**
* Atlas API Reference
*
* OpenAPI spec version: dev
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package fr.vestiairecollective.network.redesign.model

import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
class Negotiation() {

    lateinit var id: String
    lateinit var type: Negotiation.Type
    /* Date when negotiation was created */
    lateinit var creationDate: java.util.Calendar
    /* Current price of the negotiation (amount can depends between seller or buyer due to currency rates variations)  */
    lateinit var price: Price
    /* Initial offer price */
    lateinit var initialPrice: Price
    /* Min allowed offer price. New offers should be strictly greater */
    lateinit var minOffer: Price
    /* Max allowed offer price. New offers should be lower of equals */
    lateinit var maxOffer: Price    /* Remaining offer count allowed for seller */
    var sellerRemainingOffers: Int = 0
    /* Remaining offer count allowed for buyer */
    var buyerRemainingOffers: Int = 0

    /* Displayable translated message that describes the status of the negotiation */
    lateinit var userMessage: String    /* A negotiation is accepted if someone has accepted an offer */
    var isAccepted: Boolean = false
    /* A negotiation is closed if no actions are available for anyone */
    var isClosed: Boolean = false

    /* Displayable translated message that gives detail of the negotiation */
    var userSubMessage: String? = null
    /* Date when negotiation expires */
    var expirationDate: java.util.Calendar? = null
    /* PVN (Seller share). Only if the caller if the seller */
    var sellerPvnPrice: Price? = null
    /* A list of next allowed actions for the caller */
    var nextActions: Negotiation.NextActions? = null
    /* [Relationship] Product's seller */
    var seller: User? = null
    /* [Relationship] Product's buyer */
    var buyer: User? = null
    /* [Relationship] Negotiated product */
    var product: Product? = null
    /* [Relationship] Last negotiation event */
    var lastEvent: NegotiationEvent? = null
    /* [Relationship] Negotiation-related events history */
    var events: Array<NegotiationEvent>? = null

    constructor(id: String, type: Type, creationDate: java.util.Calendar, price: Price, initialPrice: Price, minOffer: Price, maxOffer: Price, sellerRemainingOffers: Int, buyerRemainingOffers: Int, userMessage: String, isAccepted: Boolean, isClosed: Boolean) : this() {
        this.id = id
        this.type = type
        this.creationDate = creationDate
        this.price = price
        this.initialPrice = initialPrice
        this.minOffer = minOffer
        this.maxOffer = maxOffer
        this.sellerRemainingOffers = sellerRemainingOffers
        this.buyerRemainingOffers = buyerRemainingOffers
        this.userMessage = userMessage
        this.isAccepted = isAccepted
        this.isClosed = isClosed
    }


    enum class Type(val value: String) {
    
        negotiation("negotiation");
    
    }

    enum class NextActions(val value: String) {
    
        offer("offer"),
    
        accept("accept"),
    
        reject("reject"),
    
        order("order");
    
    }

}

