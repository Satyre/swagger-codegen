/**
* Atlas API Reference
*
* OpenAPI spec version: dev
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package fr.vestiairecollective.network.redesign.model

import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
class Product() {

    lateinit var id: String
    lateinit var type: Product.Type
    /* Product name */
    lateinit var name: String
    /* Current price */
    lateinit var price: Price
    /* Regular price (before discount) */
    var regularPrice: Price? = null
    /* Seller's description */
    var description: String? = null
    /* Translated seller's description in local language */
    var localizedDescription: String? = null
    /* Editor's pick */
    var editorDescription: String? = null
    /* Number of likes */
    var likeCount: Int? = null
    /* Path of product page */
    var path: String? = null
    /* Status of the product sold or not */
    var sold: Boolean? = null
    /* Possibility to negotiable */
    var negotiable: Boolean? = null
    /* Product is in stock and ready to ship */
    var inStock: Boolean? = null
    var warehouse: Warehouse? = null
    var tags: Array<ProductTag>? = null
    /* Creation date of the product */
    var creationDate: java.util.Calendar? = null
    /* Sold date of the product */
    var soldDate: java.util.Calendar? = null
    var pictures: Array<Picture>? = null
    var size: Size? = null
    var measurements: Array<ProductMeasurement>? = null
    var unit: Unit? = null
    var brand: Brand? = null
    var material: Material? = null
    var pattern: Pattern? = null
    var color: Color? = null
    var condition: Condition? = null
    var universe: Universe? = null
    var category: Category? = null
    var subcategory: Subcategory? = null
    var season: Season? = null
    var model: Model? = null
    var installment: ProductInstallment? = null
    var packagings: Array<ProductPackaging>? = null
    var meshLinks: ProductMeshLinks? = null
    /* ISO code list of countries where product shipping is prohibited due to country restrictions */
    var prohibitedCountries: Array<String>? = null
    /* Buyers who have a negotiation in progress */
    var buyersWhoHaveActiveNegotiation: Array<String>? = null
    /* buyers who are on negotiation hold */
    var buyersWhoAreOnNegotiationHold: Array<String>? = null
    /* Product is received by VC */
    var receipt: Boolean? = null
    /* Product Availability */
    var available: Boolean? = null
    /* Regional variations of the page. */
    var alternateVersions: Array<ContentsLocalizedPath>? = null
    var metadata: ContentsPageMetadata? = null
    /* Product's sold having whitelist flag (true if must have http_gone) */
    var shouldBeGone: Boolean? = null
    var indexation: ContentsPageIndexation? = null
    /* Product is from consigment */
    var consignment: Boolean? = null
    var buyerFees: Array<BuyerFee>? = null
    /* Product location before sell */
    var isoCountry: String? = null
    /* Product flags */
    var flags: Array<String>? = null
    /* Service activated or not in the context of a shipping option */
    var services: Array<Plan>? = null
    /* [Relationship] Client who sells product */
    var seller: User? = null
    /* [Relationship] Watch strap material */
    var watchStrapMaterial: Material? = null
    /* [Relationship] Watch mechanism */
    var watchMechanism: Mechanism? = null

    constructor(id: String, type: Type, name: String, price: Price) : this() {
        this.id = id
        this.type = type
        this.name = name
        this.price = price
    }


    enum class Type(val value: String) {
    
        product("product");
    
    }

}

